@model UserViewModel

<div id="titleBar">
    <p>The easiest way to connect.</p>
</div>

<div class="registerPanel panel panel-primary">
    <div class="panel-heading">
        <h3 class="registerTitle panel-title">Register Now</h3>
    </div>
    <div class="panel-body col-lg-offset-2">
        @using (Html.BeginForm("Index", "Account", FormMethod.Post))
        {
            <div class="form-horizontal">

                <span id="legendSpan"><label id="legend">*</label> Indicates required field</span> 
           
                <div class="form-group">
                    <label class="requiredField">*</label> @Html.LabelFor(model => model.UserEF.FIRST_NAME, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UserEF.FIRST_NAME, new { htmlAttributes = new { @class = "form-control" ,id="txtFirstName"} })
                        @Html.ValidationMessageFor(model => model.UserEF.FIRST_NAME, "", new { @class = "text-danger" , id="validationFirstName" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="requiredField">*</label> @Html.LabelFor(model => model.UserEF.LAST_NAME, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UserEF.LAST_NAME, new { htmlAttributes = new { @class = "form-control",id="txtLastName" } })
                        @Html.ValidationMessageFor(model => model.UserEF.LAST_NAME, "", new { @class = "text-danger",id="validationLastName" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="requiredField">*</label>@Html.LabelFor(model => model.UserEF.BIRTHDAY, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UserEF.BIRTHDAY, new { htmlAttributes = new { @class = "form-control", id = "bisrthdate", type = "date" } })
                        @Html.ValidationMessageFor(model => model.UserEF.BIRTHDAY, "", new { @class = "text-danger",id="validationBirthday" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UserEF.COUNTRY_ID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(x => x.UserEF.COUNTRY_ID, (SelectList)@ViewBag.CountryList as SelectList, "Select Country", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.UserEF.COUNTRY_ID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UserEF.MOBILE_NO, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UserEF.MOBILE_NO, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserEF.MOBILE_NO, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UserEF.GENDER, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">

                        @Html.DropDownListFor(model => model.UserEF.GENDER, new SelectList(
                  new List<Object>{ new { value = "U" , text = "Undefined"  },
                                   new { value = "F" , text = "Female" },
                                   new { value = "M" , text = "Male"} }, "value", "text"), new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.UserEF.GENDER, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="requiredEmailField">*</label>@Html.LabelFor(model => model.UserEF.EMAIL_ADDRESS, htmlAttributes: new { @class = "labelEmail control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.UserEF.EMAIL_ADDRESS, new { htmlAttributes = new { @class = "form-control",id="txtEmail" } })
                        @Html.ValidationMessageFor(model => model.UserEF.EMAIL_ADDRESS, "", new { @class = "text-danger",id="validationEmail" })
                    </div>
                </div>


                <div class="form-group">
                    <label class="requiredField">*</label>@Html.LabelFor(model => model.UserEF.USER_NAME, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UserEF.USER_NAME, new { htmlAttributes = new { @class = "form-control", id = "txtUserName" } })
                        @Html.ValidationMessageFor(model => model.UserEF.USER_NAME, "", new { @class = "text-danger", id = "validationUserName" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="requiredField">*</label>@Html.LabelFor(model => model.UserEF.PASSWORD, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UserEF.PASSWORD, new { htmlAttributes = new { @class = "form-control",id="txtPassword" } })
                        @Html.ValidationMessageFor(model => model.UserEF.PASSWORD, "", new { @class = "text-danger",id="validationPassword" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="requiredField">*</label> @Html.Label("Confirm Password", htmlAttributes: new { @class = "control-label col-md-3" , id="labalConfirmPass" })
            <div class="col-md-9">
                @Html.TextBox("confirmPassword","", new { @class = "form-control",id="txtConfirmPassword" , type="password"})
                @Html.ValidationMessage("confirmPassword", "", new { @class = "text-danger" , id="validationConfirmPassword"})
            </div>
        </div>


                <div class="form-group">
                    <div class="col-md-offset-6 col-md-10">
                        <input type="submit" value="Register" class="registerBtn btn btn-primary" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        var checkIfUserExistUrl = '@Url.Action("CheckIfUsernameExists", "Account")';
        var checkIfEmailExistUrl = '@Url.Action("CheckIfEmailExists", "Account")';
    </script>

<script src="~/Scripts/Validation.js"></script>

}
